version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/neo-utils-go
    docker:
      - image: circleci/golang:1
        environment:
          CIRCLE_TEST_REPORTS: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
          NEO4J_URL: http://neo4j:foobar@localhost:7474/db/data/
      - image: neo4j:3.2.7-enterprise
        environment:
          NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
          NEO4J_AUTH: none
    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            GO111MODULE=off go get github.com/mattn/goveralls
            GO111MODULE=off go get github.com/jstemmer/go-junit-report
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.18.0
            wget https://raw.githubusercontent.com/Financial-Times/upp-coding-standard/v1.0.0/golangci-config/.golangci.yml
      - run:
          name: Make result folders
          command: |
            mkdir -p ${CIRCLE_TEST_REPORTS}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: Go Build
          command: go build -mod=readonly -v
      - run:
          name: Run linters
          command: |
            golangci-lint run --new-from-rev=master --build-tags=integration --config .golangci.yml
      - run:
          name: Pre Tests
          command: '/usr/bin/curl -u neo4j:neo4j -H "Content-Type: application/json" -X POST -d ''{"password":"foobar"}''  http://localhost:7474/user/neo4j/password'
      - run:
          name: Run Tests and create coverage report
          command: go test -mod=readonly -v -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
      - store_test_results:
          path: /tmp/test-results
workflows:
  version: 2
  test-project:
    jobs:
      - build
